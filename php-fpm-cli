#!/bin/bash
#
# The MIT License (MIT)
#
# Copyright (c) 2014 Mathias Leppich <mleppich@muhqu.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

usage() {
    cat <<USAGE
Usage: $(basename $0) [-connect CONN] -f <code>

Options:
     -connect CONN    Passed to cgi-fcgi, default: $CONN
                      examples: ip.add.re.ss:port or /path/to/php5-fpm.sock

     -f <code>        Run PHP file without using script tags

     -q <code>        query string for running the php file

USAGE
}

main() {
    res=0

    #Execute PHP
    SCRIPT_FILENAME=$PHP_FILE_PATH \
    QUERY_STRING=$PHP_QUERY_STRING \
    REQUEST_METHOD=GET \
    cgi-fcgi -bind -connect "$CONN" > $TMP_OUTPUT_FILE_PATH #without dumping to file, cgi-fcgi hides "Status"

    #Get successful-execution indications
    php_exit_code=$?;
    php_http_status=$(awk '/Status: ([0-9]{3})/{print $2}' $TMP_OUTPUT_FILE_PATH)
    if [[ "${#php_http_status}" -eq 0 ]]; then
      php_http_status="200"
      echo "No status header returned, assuming 200 Success"
    fi

    if [[ "$php_exit_code" == 0 && "$php_http_status" == "200" ]]; then
      echo "$(<$TMP_OUTPUT_FILE_PATH)"
    else
      echo "PHP script returned failure (status-code=$php_http_status php_exit_code=$php_exit_code)"
      res=1
    fi

    rm $TMP_OUTPUT_FILE_PATH
    exit $res
}

CONN="/run/php-fpm/www.sock"
PHP_FILE_PATH=""
PHP_QUERY_STRING=""
TMP_OUTPUT_FILE_PATH="/tmp/php_fpm_cli_output.tmp"
init() {
  until [ -z "$1" ]; do
    case "$1" in
      -connect|--connect) shift; CONN="$1"; shift; ;;

      -f) shift; PHP_FILE_PATH="$1"; shift; ;;

      -q) shift; PHP_QUERY_STRING="$1"; shift; ;;

      help|-h|-help|--help)
        usage;
        exit 0
        ;;

      *)
        echo "unknown option: $1";
        usage;
        exit 1
        ;;
    esac
  done
  if [ -z "$PHP_FILE_PATH" ]; then
    echo "missing option: -f <code>";
    usage;
    exit 1
  fi
}

init "$@" && main
